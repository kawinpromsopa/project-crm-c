##############
# build script
##############

#!/bin/bash
set -xe

# build
docker-compose build
sleep 5
# docker cachet init
docker-compose up -d
sleep 5
# add env
APP_KEY="$(docker-compose logs | grep ERROR | sed "s/^.*APP/APP/;s/'.*//" > .env)"
sleep 5
# docker-compose restart
docker-compose up -d

############
# nginx conf
############

upstream ${customer} {
  server 127.0.0.1:${PORT};
}

map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
  listen 80;

  server_name ${customer}.${domain}.com;
  client_max_body_size 400M;
  keepalive_timeout 15;

  location / {
    try_files $uri @proxy;
  }

  location @proxy {
    include proxy_params;
    proxy_redirect off;
    proxy_pass http://${customer};
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }
}

################
# docker-compose
################


version: "3"

services:
  ${CUSTOMER_PG}:
    image: postgres:9.5
    volumes:
      - /var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always
  ${CUSTOMER_CH}:
    build:
      context: .
      args:
        - cachet_ver=v2.3.15
    ports:
      - ${PORT}:${PORT}
    links:
      - ${CUSTOMER_PG}:${CUSTOMER_PG}
    environment:
      - DB_DRIVER=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_PREFIX=chq_
      - APP_KEY=${APP_KEY:-null}
      - APP_LOG=errorlog
      - DEBUG=false
    depends_on:
      - ${CUSTOMER_PG}
    restart: on-failure


############
# dockerfile
############

expose ${PORT}